<?xml version="1.0" encoding="UTF-8"?>

<!--
 * See the NOTICE file distributed with this work for additional
 * information regarding copyright ownership.
 *
 * This is free software; you can redistribute it and/or modify it
 * under the terms of the GNU Lesser General Public License as
 * published by the Free Software Foundation; either version 2.1 of
 * the License, or (at your option) any later version.
 *
 * This software is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU
 * Lesser General Public License for more details.
 *
 * You should have received a copy of the GNU Lesser General Public
 * License along with this software; if not, write to the Free
 * Software Foundation, Inc., 51 Franklin St, Fifth Floor, Boston, MA
 * 02110-1301 USA, or see the FSF site: http://www.fsf.org.
-->

<xwikidoc version="1.2" reference="MoccaCalendar.Code.JSONService" locale="">
  <web>MoccaCalendar.Code</web>
  <name>JSONService</name>
  <language/>
  <defaultLanguage/>
  <translation>0</translation>
  <creator>xwiki:XWiki.Admin</creator>
  <parent>WebHome</parent>
  <author>xwiki:XWiki.Admin</author>
  <contentAuthor>xwiki:XWiki.Admin</contentAuthor>
  <version>1.1</version>
  <title/>
  <comment/>
  <minorEdit>false</minorEdit>
  <syntaxId>xwiki/2.1</syntaxId>
  <hidden>true</hidden>
  <content>{{velocity filter="html" wiki="false"}}
#if($xcontext.action == 'get')
##
## macro "renderAgendaView"
## render an event in "agenda" view
## this probably can be done better in a template
## @param event the event instance
## @param eventDoc the document for the event instance
## @param resultMap where to store the rendered result
##
#macro(renderAgendaView $event $eventDoc $resultMap)
  #set($startDate = $event.startDate)
  #set($endDate = $event.endDate)
  #set($sameDay = ($endDate.getYear() == $startDate.getYear() &amp;&amp; $endDate.getDayOfYear() == $startDate.getDayOfYear()))
  #set($format = $eventDoc.getObject("MoccaCalendar.MoccaCalendarEventClass").getxWikiClass().get('startDate').getProperty('dateFormat').value)
  #if("$!{format}"=="")
    #set($format = $xwiki.getSpacePreference('dateformat', 'dd.MM.yyyy HH:mm'))
  #end
  #set($idx = $format.indexOf("H"))
  #if($idx &gt; 0)
    #set($timeformat = $format.substring($idx).trim())
    #if($allDay)
      #set($format = $format.substring(0,$idx).trim())
    #end
  #else
    #set($timeformat = "HH:mm")
  #end
  #set($dateprinter = $xwiki.jodatime.getDateTimeFormatterForPattern($format))
  #set($timeprinter = $xwiki.jodatime.getDateTimeFormatterForPattern($timeformat))
  #set($html = '&lt;div class="moccaevent" style="border-color:' + $color + '"&gt;')
  #set($html = "${html}"+'&lt;h5&gt;&lt;a href="'+${eventDoc.getURL("view")}+'"&gt;' + $escapetool.html($event.getTitle()) + '&lt;/a&gt;&lt;/h5&gt;')
  ##
  ## you are in a maze of twisty little ifs, all different
  ##
  #set($html = "${html}" + '&lt;p class="date"&gt;')
  #if($allDay)
    #if($sameDay)
       #set($html = $html + $dateprinter.print($startDate))
    #else
       #set($html = $html + $dateprinter.print($startDate) + ' - ' + $dateprinter.print($endDate))
    #end
    #set($html = $html + ' ' + $services.localization.render('xwiki.calendar.allDayText'))
  #else
    #if($sameDay)
      #set($html = $html + $dateprinter.print($startDate) + ' - ' + $timeprinter.print($endDate))
    #else
      #set($html = $html + $dateprinter.print($startDate) + ' - ' + $dateprinter.print($endDate))
    #end
  #end
  #set($html = "${html}" + '&lt;/p&gt;')
  #set($html = "${html}"  + $event.getDescriptionHtml() )
  #set($html = "${html}&lt;/div&gt;")
  #set($discard = $resultMap.put("html", $html))
#end
##
##
#set($startQuery = $datetool.toDate('yyyy-M-d', $request.start))
#set($endQuery = $datetool.toDate('yyyy-M-d', $request.end))
#set($orderAsc=true)
#if("$!{request.outputView}"=="plainList" &amp;&amp; $datetool.difference($datetool.getDate(),$endQuery).getSeconds()&lt;0)
  #set($orderAsc=false)
#end
##
## TODO: Remove the check when the parent version will be XWiki 12.1 or greather.
#if ($collectiontool)
  #set ($calendarsSet = $collectiontool.set)
#else
  #set ($calendarsSet = $collectionstool.set)
#end
#if ("$!request.calendarsFilter" != '')
  #set ($calendarsArray = $request.calendarsFilter.split(','))
  ## We need to convert the String[] to a List&lt;String&gt; before calling addAll (which expects a collection).
  #set ($discard = $calendarsSet.addAll($calendarsArray.subList(0, $calendarsArray.size())))
#end
#set ($events = $services.moccacalendar.queryEvents($startQuery, $endQuery, "$!request.filter", $request.calendarDoc, $orderAsc, $calendarsSet))
##
#set($jsondateformat = $xwiki.jodatime.getDateTimeFormatterForPattern("yyyy-MM-dd'T'HH:mm"))
#set($calDocParam = "calendarDoc=$!{escapetool.url($request.calendarDoc)}")
#set($results = [])
##
#foreach($event in $events)
  #set($itemdoc = $xwiki.getDocument($event.getEventDocRef()))
  #set($item = $itemdoc.getFullName())
  #set($color = $event.getBackgroundColor())
  #set($textColor = $event.getTextColor())
  #set($allDay = $event.allDay)
  #set($startdate = $event.startDate)
  #set($enddateExclusive = $event.endDateExclusive)
  #if($event.isRecurrent())
    #set($origStartDate = $event.originalStartDate)
    #if($origStartDate == $NULL)
      #set($origStartDate = $startdate)
    #end
    #set($extraParam = "${calDocParam}&amp;instanceStart=${escapetool.url($jsondateformat.print($origStartDate))}")
  #else
    #set($extraParam = $calDocParam)
  #end
  #set($canEdit = $xwiki.hasAccessLevel("edit", $xcontext.getUser(), $item))
  #set($canDelete = $xwiki.hasAccessLevel("delete", $xcontext.getUser(), $item))
  #set($eventMap = {"id" : $services.model.serialize($event.getEventDocRef(),'compact'), "title" : $event.getTitle(), "url" : $itemdoc.getURL('view',"$extraParam"), "editUrl" : $itemdoc.getURL('edit',"$extraParam"), "saveUrl" : $itemdoc.getURL('save',"$extraParam"),  "deleteUrl" : $itemdoc.getURL('delete',"$extraParam"), "canEdit": $canEdit, "canDelete": $canDelete, "start" : $jsondateformat.print($startdate), "end" : $jsondateformat.print($enddateExclusive), "allDay" : $allDay, "color" : $color, "recurrent" : $event.isRecurrent() })
  #if("$textColor" != "")
    #set($discard = $eventMap.put("textColor", $textColor))
  #end
  ## the "outputView" gets no longer updated,
  ## so we send the HTML with every request
  ## TODO: move that code to the JavaScript "PlainListEventRenderer.render"
  ###if("$!{request.outputView}"=="plainList")
    #renderAgendaView($event $itemdoc $eventMap)
  ###end
  #set($discard = $results.add($eventMap))
#end
#jsonResponse($results)
#else
Service Page for the Mocca Calendar Application
#end ## end of #if($xcontext.action == 'get')
{{/velocity}}</content>
  <object>
    <name>MoccaCalendar.Code.JSONService</name>
    <number>0</number>
    <className>XWiki.RequiredRightClass</className>
    <guid>6f3fb35d-f7aa-4d2f-9d7b-d249cde3683f</guid>
    <class>
      <name>XWiki.RequiredRightClass</name>
      <customClass/>
      <customMapping/>
      <defaultViewSheet/>
      <defaultEditSheet/>
      <defaultWeb/>
      <nameField/>
      <validationScript/>
      <level>
        <cache>0</cache>
        <disabled>0</disabled>
        <displayType>select</displayType>
        <multiSelect>0</multiSelect>
        <name>level</name>
        <number>1</number>
        <picker>0</picker>
        <prettyName>level</prettyName>
        <relationalStorage>0</relationalStorage>
        <separator> </separator>
        <separators> ,|</separators>
        <size>1</size>
        <sort>none</sort>
        <unmodifiable>0</unmodifiable>
        <validationMessage/>
        <validationRegExp/>
        <values>edit|programming</values>
        <classType>com.xpn.xwiki.objects.classes.StaticListClass</classType>
      </level>
    </class>
    <property>
      <level>programming</level>
    </property>
  </object>
</xwikidoc>
